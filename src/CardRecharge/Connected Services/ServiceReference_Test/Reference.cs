//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CardRecharge.ServiceReference_Test {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_Test.DoorAuthoritySoap")]
    public interface DoorAuthoritySoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Door_Authority_New", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Door_Authority_New(string jsonText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Door_Authority_New", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Door_Authority_NewAsync(string jsonText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Door_Authority", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Door_Authority(string jsonText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Door_Authority", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Door_AuthorityAsync(string jsonText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Door_CS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Door_CS(string jsonText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Door_CS", ReplyAction="*")]
        System.Threading.Tasks.Task<string> Door_CSAsync(string jsonText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Login(string empid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<string> LoginAsync(string empid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangePwd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ChangePwd(string empid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangePwd", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ChangePwdAsync(string empid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEmpInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetEmpInfo(string empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEmpInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetEmpInfoAsync(string empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRechargeInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetRechargeInfo(string empid, string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRechargeInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetRechargeInfoAsync(string empid, string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WriteLog", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void WriteLog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WriteLog", ReplyAction="*")]
        System.Threading.Tasks.Task WriteLogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetBalance(string empid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetBalanceAsync(string empid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DoorAuthoritySoapChannel : CardRecharge.ServiceReference_Test.DoorAuthoritySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoorAuthoritySoapClient : System.ServiceModel.ClientBase<CardRecharge.ServiceReference_Test.DoorAuthoritySoap>, CardRecharge.ServiceReference_Test.DoorAuthoritySoap {
        
        public DoorAuthoritySoapClient() {
        }
        
        public DoorAuthoritySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DoorAuthoritySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoorAuthoritySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoorAuthoritySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string Door_Authority_New(string jsonText) {
            return base.Channel.Door_Authority_New(jsonText);
        }
        
        public System.Threading.Tasks.Task<string> Door_Authority_NewAsync(string jsonText) {
            return base.Channel.Door_Authority_NewAsync(jsonText);
        }
        
        public string Door_Authority(string jsonText) {
            return base.Channel.Door_Authority(jsonText);
        }
        
        public System.Threading.Tasks.Task<string> Door_AuthorityAsync(string jsonText) {
            return base.Channel.Door_AuthorityAsync(jsonText);
        }
        
        public string Door_CS(string jsonText) {
            return base.Channel.Door_CS(jsonText);
        }
        
        public System.Threading.Tasks.Task<string> Door_CSAsync(string jsonText) {
            return base.Channel.Door_CSAsync(jsonText);
        }
        
        public string Login(string empid, string pwd) {
            return base.Channel.Login(empid, pwd);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string empid, string pwd) {
            return base.Channel.LoginAsync(empid, pwd);
        }
        
        public string ChangePwd(string empid, string pwd) {
            return base.Channel.ChangePwd(empid, pwd);
        }
        
        public System.Threading.Tasks.Task<string> ChangePwdAsync(string empid, string pwd) {
            return base.Channel.ChangePwdAsync(empid, pwd);
        }
        
        public string GetEmpInfo(string empid) {
            return base.Channel.GetEmpInfo(empid);
        }
        
        public System.Threading.Tasks.Task<string> GetEmpInfoAsync(string empid) {
            return base.Channel.GetEmpInfoAsync(empid);
        }
        
        public System.Data.DataTable GetRechargeInfo(string empid, string startDate, string endDate) {
            return base.Channel.GetRechargeInfo(empid, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetRechargeInfoAsync(string empid, string startDate, string endDate) {
            return base.Channel.GetRechargeInfoAsync(empid, startDate, endDate);
        }
        
        public void WriteLog() {
            base.Channel.WriteLog();
        }
        
        public System.Threading.Tasks.Task WriteLogAsync() {
            return base.Channel.WriteLogAsync();
        }
        
        public string GetBalance(string empid) {
            return base.Channel.GetBalance(empid);
        }
        
        public System.Threading.Tasks.Task<string> GetBalanceAsync(string empid) {
            return base.Channel.GetBalanceAsync(empid);
        }
    }
}
